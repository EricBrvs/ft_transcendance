services:
  gateway:
    container_name: gateway
    build: ./backend/gateway
    image: gateway
    ports:
      - "9443:443"
    depends_on:
      - auth
      - user
      - game
    restart: always
  auth:
    container_name: auth
    image: auth
    build: ./backend/auth
    volumes:
      - ./backend/auth:/app
      - /app/node_modules  
    restart: always

  user:
    container_name: user
    image: user
    build: ./backend/user
    volumes:
      - ./backend/user:/app
      - /app/node_modules
    restart: always
  game:
    container_name: game
    image: game
    build: ./backend/game
    volumes:
      - ./backend/game:/app
      - /app/node_modules
    restart: always
#   frontend:
#     build: ./frontend
#     volumes:
#       - ./frontend/src:/app/src
#     ports:
#       - "3000:3000"
#     depends_on:
#       - auth
  logstash:
    build: ./ELK/logstash
    volumes:
      - ./ELK/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./logs/auth:/var/log/app
    ports:
      - "5044:5044"
    depends_on:
      - auth

# Service setup_kibana supprimé car il n'est plus nécessaire avec la configuration statique de Kibana

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:8.13.4
    volumes:
      - ./ELK/kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml
    environment:
      - ELASTICSEARCH_HOSTS=${ELASTICSEARCH_HOSTS}
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=${KIBANA_SYSTEM_PASSWORD}
      - KIBANA_ENCRYPTION_KEY=${KIBANA_ENCRYPTION_KEY}
      - KIBANA_SECURITY_KEY=${KIBANA_SECURITY_KEY}
      - KIBANA_REPORTING_KEY=${KIBANA_REPORTING_KEY}
    depends_on:
      elasticsearch:
        condition: service_healthy
    ports:
      - "5601:5601"
    networks:
      - ELK

  elasticsearch-init:
    container_name: elasticsearch-init
    image: docker:23.0.1-cli
    privileged: true
    volumes:
      - ./ELK/init-elasticsearch.sh:/init-elasticsearch.sh:ro
    command: sh -c "chmod +x /init-elasticsearch.sh && /init-elasticsearch.sh"
    networks:
      - ELK

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    depends_on:
      - elasticsearch-init
    volumes:
      - ./ELK/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - ./certs/instance:/usr/share/elasticsearch/config/certs/instance:ro
      - ./certs/ca:/usr/share/elasticsearch/config/certs/ca:ro
      - esdata:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD", "curl", "-f", "-u", "elastic:${ELASTIC_PASSWORD}", "http://localhost:9200/_cluster/health?wait_for_status=yellow&timeout=5s"]
      interval: 10s
      timeout: 15s
      retries: 20
    environment:
      ES_JAVA_OPTS: "-Xms1g -Xmx1g"
      discovery.type: "single-node"
      ELASTIC_PASSWORD: "${ELASTIC_PASSWORD}"
      xpack.security.http.ssl.enabled: "false"
    ports:
      - "9200:9200"
      - "9300:9300"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - ELK

volumes:
  esdata:
    driver: local

networks:
  ELK:
    driver: bridge
