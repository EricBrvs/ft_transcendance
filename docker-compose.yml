services:
  gateway:
    container_name: gateway
    build: ./backend/gateway
    image: gateway
    ports:
      - "9443:443"
    depends_on:
      - auth
      - user
      - game
    restart: always
  auth:
    container_name: auth
    image: auth
    build: ./backend/auth
    volumes:
      - ./backend/auth:/app
      - /app/node_modules  
    restart: always

  user:
    container_name: user
    image: user
    build: ./backend/user
    volumes:
      - ./backend/user:/app
      - /app/node_modules
    restart: always
  game:
    container_name: game
    image: game
    build: ./backend/game
    volumes:
      - ./backend/game:/app
      - /app/node_modules
    restart: always
  frontend:
    build: ./frontend
    volumes:
      - ./frontend/src:/app/src
    ports:
      - "3000:3000"
    depends_on:
      - auth
  logstash:
    build: ./elk/logstash
    volumes:
      - ./elk/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    ports:
      - "5044:5044"  # TCP input
    depends_on:
      - auth

  kibana:
    image: kibana:8.11.1
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.1
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

volumes:
  auth-data:
  user-data:
  dashboard-data:
  esdata:
